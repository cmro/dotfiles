#  Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/cmroncz/.oh-my-zsh"

# Theme
ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git pip pyenv zsh-autosuggestions autojump kubectl kubectx docker docker-compose)

# completions
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
source $ZSH/oh-my-zsh.sh
source <(devpod completion zsh)
source <(chezmoi completion zsh)
source ~/.opsi_cli_completion.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
# aliases
alias brup='brew upgrade && brew cleanup'
alias pipdate="pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U"

source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=245'  # hell grau

alias ls='colorls'
# alias vim='nvim'

ROLESDIR="/Users/cmroncz/code/playbooks/ansible-roles"
SARULESDIR="$ROLESDIR/spamassassin/files/var/lib/spamassassin/local"

salint() {
  docker run -it --rm -v $SARULESDIR:/sarules jugit-registry.fz-juelich.de/docker-images/spamassassin-docker spamassassin --lint -C /sarules
}

sacheckmail() {
  docker run -it --rm -v $SARULESDIR/71_ITS_body.cf:/etc/spamassassin/71_ITS_body.cf -v $SARULESDIR/70_ITS_header.cf:/etc/spamassassin/70_ITS_header.cf -v $SARULESDIR/10_fake_dhl_from.cf:/etc/spamassassin/10_fake_dhl_from.cf -v $(pwd):/data -w /data jugit-registry.fz-juelich.de/docker-images/spamassassin-docker spamassassin -D -t "$@"
}

sst() {
  ssh -t $@ "tmux attach || tmux"
}

# certificate expiration
getCertExp() {
  echo | openssl s_client -showcerts -servername $1 -connect $1:443 2>&1 | openssl x509 -noout -dates | grep ^notAfter
}
# path
export PATH="/usr/local/sbin:$PATH"
export PATH="~/.local/bin:$PATH"

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"                                       # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion

# ansible
export ANSIBLE_VAULT_PASSWORD_FILE="~/.vaultpw"

# vscode
export ANSIBLE_VAULT_PASSWORD="$(cat ~/.vaultpw)"
export UID

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

# Podman
export PODMAN_USERNS=keep-id
export BUILDAH_FORMAT=docker
#
# Kubernetes
RPS1='$(kubectx_prompt_info)'

# gpg agent
GPG_TTY=$(tty)
export GPG_TTY
# export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent

eval "$(gdircolors ~/.dircolors.nord)"

# ruby
eval "$(rbenv init -)"

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Fix double virtual env in starship
export VIRTUAL_ENV_DISABLE_PROMPT=true

eval "$(starship init zsh)"
